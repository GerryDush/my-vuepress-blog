const l=JSON.parse('{"key":"v-1e155518","path":"/note/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95C%E8%AF%AD%E8%A8%80%E5%AE%9E%E7%8E%B0.html","title":"","lang":"English","frontmatter":{},"headers":[{"level":2,"title":"一、数据结构和算法绪论","slug":"一、数据结构和算法绪论","link":"#一、数据结构和算法绪论","children":[{"level":3,"title":"1、什么是数据结构？","slug":"_1、什么是数据结构","link":"#_1、什么是数据结构","children":[]},{"level":3,"title":"2、什么是算法？","slug":"_2、什么是算法","link":"#_2、什么是算法","children":[]},{"level":3,"title":"3、时间复杂度和空间复杂度","slug":"_3、时间复杂度和空间复杂度","link":"#_3、时间复杂度和空间复杂度","children":[]}]},{"level":2,"title":"二、线性表","slug":"二、线性表","link":"#二、线性表","children":[{"level":3,"title":"1、线性表的定义","slug":"_1、线性表的定义","link":"#_1、线性表的定义","children":[]},{"level":3,"title":"2、抽象数据类型。","slug":"_2、抽象数据类型。","link":"#_2、抽象数据类型。","children":[]},{"level":3,"title":"3、线性表的顺序结构实现","slug":"_3、线性表的顺序结构实现","link":"#_3、线性表的顺序结构实现","children":[]},{"level":3,"title":"4、线性表链式存储结构实现","slug":"_4、线性表链式存储结构实现","link":"#_4、线性表链式存储结构实现","children":[]},{"level":3,"title":"5、单链表结构和顺序存储结构优缺点","slug":"_5、单链表结构和顺序存储结构优缺点","link":"#_5、单链表结构和顺序存储结构优缺点","children":[]},{"level":3,"title":"6、静态链表与实现","slug":"_6、静态链表与实现","link":"#_6、静态链表与实现","children":[]},{"level":3,"title":"7、单链表小结面试题","slug":"_7、单链表小结面试题","link":"#_7、单链表小结面试题","children":[]},{"level":3,"title":"8、循环单链表","slug":"_8、循环单链表","link":"#_8、循环单链表","children":[{"level":5,"title":"有头节点实现","slug":"有头节点实现","link":"#有头节点实现","children":[]},{"level":5,"title":"无头节点实现","slug":"无头节点实现","link":"#无头节点实现","children":[]},{"level":5,"title":"约瑟夫问题","slug":"约瑟夫问题","link":"#约瑟夫问题","children":[]}]},{"level":3,"title":"9、带尾指针的循环链表","slug":"_9、带尾指针的循环链表","link":"#_9、带尾指针的循环链表","children":[{"level":5,"title":"有头节点循环链表实现（尾指针）","slug":"有头节点循环链表实现-尾指针","link":"#有头节点循环链表实现-尾指针","children":[]},{"level":5,"title":"魔术师发牌问题","slug":"魔术师发牌问题","link":"#魔术师发牌问题","children":[]},{"level":5,"title":"拉丁方阵问题","slug":"拉丁方阵问题","link":"#拉丁方阵问题","children":[]}]},{"level":3,"title":"10、 双向链表","slug":"_10、-双向链表","link":"#_10、-双向链表","children":[{"level":5,"title":"代码实现","slug":"代码实现","link":"#代码实现","children":[]}]}]},{"level":2,"title":"三、栈和队列（线性表）","slug":"三、栈和队列-线性表","link":"#三、栈和队列-线性表","children":[{"level":3,"title":"1、栈与队列的定义","slug":"_1、栈与队列的定义","link":"#_1、栈与队列的定义","children":[]},{"level":3,"title":"2、栈的顺序存储结构及实现","slug":"_2、栈的顺序存储结构及实现","link":"#_2、栈的顺序存储结构及实现","children":[]},{"level":3,"title":"3、顺序存储结构可动态扩容且具有栈顶指针和栈底指针的栈实现","slug":"_3、顺序存储结构可动态扩容且具有栈顶指针和栈底指针的栈实现","link":"#_3、顺序存储结构可动态扩容且具有栈顶指针和栈底指针的栈实现","children":[]},{"level":3,"title":"4、顺序存储结构数组实现栈","slug":"_4、顺序存储结构数组实现栈","link":"#_4、顺序存储结构数组实现栈","children":[]},{"level":3,"title":"5、栈的链式存储结构及实现","slug":"_5、栈的链式存储结构及实现","link":"#_5、栈的链式存储结构及实现","children":[]},{"level":3,"title":"6、栈实现算法","slug":"_6、栈实现算法","link":"#_6、栈实现算法","children":[{"level":5,"title":"括号匹配算法","slug":"括号匹配算法","link":"#括号匹配算法","children":[]},{"level":5,"title":"二进制转十进制","slug":"二进制转十进制","link":"#二进制转十进制","children":[]},{"level":5,"title":"二进制转八进制","slug":"二进制转八进制","link":"#二进制转八进制","children":[]},{"level":5,"title":"二进制转十六进制","slug":"二进制转十六进制","link":"#二进制转十六进制","children":[]},{"level":5,"title":"括号匹配与二进制转换应用","slug":"括号匹配与二进制转换应用","link":"#括号匹配与二进制转换应用","children":[]},{"level":5,"title":"逆波兰表达式","slug":"逆波兰表达式","link":"#逆波兰表达式","children":[]},{"level":5,"title":"逆波兰计算器","slug":"逆波兰计算器","link":"#逆波兰计算器","children":[]},{"level":5,"title":"中缀表达式转逆波兰表达式(后缀表达式)并计算","slug":"中缀表达式转逆波兰表达式-后缀表达式-并计算","link":"#中缀表达式转逆波兰表达式-后缀表达式-并计算","children":[]}]},{"level":3,"title":"7、队列定义","slug":"_7、队列定义","link":"#_7、队列定义","children":[]},{"level":3,"title":"8、队列的链式存储结构","slug":"_8、队列的链式存储结构","link":"#_8、队列的链式存储结构","children":[]},{"level":3,"title":"9、循环队列","slug":"_9、循环队列","link":"#_9、循环队列","children":[{"level":5,"title":"队列顺序存储的","slug":"队列顺序存储的","link":"#队列顺序存储的","children":[]},{"level":5,"title":"循环队列的定义","slug":"循环队列的定义","link":"#循环队列的定义","children":[]}]}]},{"level":2,"title":"四、递归和分治思想","slug":"四、递归和分治思想","link":"#四、递归和分治思想","children":[{"level":3,"title":"1、递归应用","slug":"_1、递归应用","link":"#_1、递归应用","children":[{"level":5,"title":"斐波那契数列","slug":"斐波那契数列","link":"#斐波那契数列","children":[]},{"level":5,"title":"递归求阶乘","slug":"递归求阶乘","link":"#递归求阶乘","children":[]},{"level":5,"title":"递归实现字符顺序输入反转输出","slug":"递归实现字符顺序输入反转输出","link":"#递归实现字符顺序输入反转输出","children":[]},{"level":5,"title":"汉诺塔","slug":"汉诺塔","link":"#汉诺塔","children":[]},{"level":5,"title":"八皇后问题(递归实现)","slug":"八皇后问题-递归实现","link":"#八皇后问题-递归实现","children":[]}]},{"level":3,"title":"2、分治思想","slug":"_2、分治思想","link":"#_2、分治思想","children":[{"level":5,"title":"二分查找","slug":"二分查找","link":"#二分查找","children":[]}]}]},{"level":2,"title":"五、字符串","slug":"五、字符串","link":"#五、字符串","children":[{"level":3,"title":"1、串的定义","slug":"_1、串的定义","link":"#_1、串的定义","children":[]},{"level":3,"title":"2、字符串的比较","slug":"_2、字符串的比较","link":"#_2、字符串的比较","children":[]},{"level":3,"title":"3、字符串的存储结构","slug":"_3、字符串的存储结构","link":"#_3、字符串的存储结构","children":[]},{"level":3,"title":"4、BF（Brute Force）算法","slug":"_4、bf-brute-force-算法","link":"#_4、bf-brute-force-算法","children":[{"level":5,"title":"BF算法练习，查找子串的位置","slug":"bf算法练习-查找子串的位置","link":"#bf算法练习-查找子串的位置","children":[]}]},{"level":3,"title":"5、KMP算法","slug":"_5、kmp算法","link":"#_5、kmp算法","children":[]},{"level":3,"title":"6、KMP算法优化","slug":"_6、kmp算法优化","link":"#_6、kmp算法优化","children":[]}]},{"level":2,"title":"六、树","slug":"六、树","link":"#六、树","children":[{"level":3,"title":"1、树的定义","slug":"_1、树的定义","link":"#_1、树的定义","children":[]},{"level":3,"title":"2、树的存储结构","slug":"_2、树的存储结构","link":"#_2、树的存储结构","children":[]},{"level":3,"title":"3、二叉树","slug":"_3、二叉树","link":"#_3、二叉树","children":[{"level":4,"title":"1、二叉树的特点","slug":"_1、二叉树的特点","link":"#_1、二叉树的特点","children":[]},{"level":4,"title":"2、二叉树的五种基本形态","slug":"_2、二叉树的五种基本形态","link":"#_2、二叉树的五种基本形态","children":[]},{"level":4,"title":"3、二叉树的概念","slug":"_3、二叉树的概念","link":"#_3、二叉树的概念","children":[]},{"level":4,"title":"4、特殊的二叉树","slug":"_4、特殊的二叉树","link":"#_4、特殊的二叉树","children":[]},{"level":4,"title":"5、二叉树的性质","slug":"_5、二叉树的性质","link":"#_5、二叉树的性质","children":[]}]},{"level":3,"title":"4、二叉树的存储结构","slug":"_4、二叉树的存储结构","link":"#_4、二叉树的存储结构","children":[]},{"level":3,"title":"5、二叉树的遍历","slug":"_5、二叉树的遍历","link":"#_5、二叉树的遍历","children":[]},{"level":3,"title":"6.1、二叉树的建立与遍历（递归）","slug":"_6-1、二叉树的建立与遍历-递归","link":"#_6-1、二叉树的建立与遍历-递归","children":[]},{"level":3,"title":"6.2、二叉树的建立与遍历（非递归）","slug":"_6-2、二叉树的建立与遍历-非递归","link":"#_6-2、二叉树的建立与遍历-非递归","children":[]},{"level":3,"title":"6.3、二叉树层序遍历","slug":"_6-3、二叉树层序遍历","link":"#_6-3、二叉树层序遍历","children":[]},{"level":3,"title":"7、线索二叉树","slug":"_7、线索二叉树","link":"#_7、线索二叉树","children":[{"level":4,"title":"什么是线索二叉树","slug":"什么是线索二叉树","link":"#什么是线索二叉树","children":[]},{"level":4,"title":"线索二叉树代码实现","slug":"线索二叉树代码实现","link":"#线索二叉树代码实现","children":[]}]},{"level":3,"title":"8、树、森林、二叉树互相转换","slug":"_8、树、森林、二叉树互相转换","link":"#_8、树、森林、二叉树互相转换","children":[{"level":4,"title":"树到二叉树的转换","slug":"树到二叉树的转换","link":"#树到二叉树的转换","children":[]},{"level":4,"title":"森林转成二叉树","slug":"森林转成二叉树","link":"#森林转成二叉树","children":[]},{"level":4,"title":"二叉树到树、森林的转换","slug":"二叉树到树、森林的转换","link":"#二叉树到树、森林的转换","children":[]},{"level":4,"title":"树与森林的遍历","slug":"树与森林的遍历","link":"#树与森林的遍历","children":[]},{"level":4,"title":"树、森林、二叉树的规律","slug":"树、森林、二叉树的规律","link":"#树、森林、二叉树的规律","children":[]}]},{"level":3,"title":"9、赫夫曼树（Huffman）","slug":"_9、赫夫曼树-huffman","link":"#_9、赫夫曼树-huffman","children":[{"level":4,"title":"构建赫夫曼树","slug":"构建赫夫曼树","link":"#构建赫夫曼树","children":[]},{"level":4,"title":"赫夫曼编码（Huffman coding）","slug":"赫夫曼编码-huffman-coding","link":"#赫夫曼编码-huffman-coding","children":[]},{"level":4,"title":"赫夫曼编码压缩代码实现","slug":"赫夫曼编码压缩代码实现","link":"#赫夫曼编码压缩代码实现","children":[]}]}]},{"level":2,"title":"七、图（Graph）","slug":"七、图-graph","link":"#七、图-graph","children":[{"level":3,"title":"图的定义","slug":"图的定义","link":"#图的定义","children":[]},{"level":3,"title":"连通图(ConnectedGraph)","slug":"连通图-connectedgraph","link":"#连通图-connectedgraph","children":[]},{"level":3,"title":"生成树","slug":"生成树","link":"#生成树","children":[{"level":4,"title":"生成树","slug":"生成树-1","link":"#生成树-1","children":[]},{"level":4,"title":"生成森林","slug":"生成森林","link":"#生成森林","children":[]}]},{"level":3,"title":"图的存储结构","slug":"图的存储结构","link":"#图的存储结构","children":[{"level":4,"title":"邻接矩阵","slug":"邻接矩阵","link":"#邻接矩阵","children":[{"level":5,"title":"无向图","slug":"无向图","link":"#无向图","children":[]},{"level":5,"title":"有向图","slug":"有向图","link":"#有向图","children":[]},{"level":5,"title":"网","slug":"网","link":"#网","children":[]},{"level":5,"title":"图的顺序存储结构代码实现（邻接矩阵）","slug":"图的顺序存储结构代码实现-邻接矩阵","link":"#图的顺序存储结构代码实现-邻接矩阵","children":[]}]},{"level":4,"title":"邻接表","slug":"邻接表","link":"#邻接表","children":[{"level":5,"title":"邻接表代码实现","slug":"邻接表代码实现","link":"#邻接表代码实现","children":[]}]}]},{"level":3,"title":"十字链表","slug":"十字链表","link":"#十字链表","children":[]},{"level":3,"title":"邻接多重表","slug":"邻接多重表","link":"#邻接多重表","children":[]},{"level":3,"title":"边集数组","slug":"边集数组","link":"#边集数组","children":[]},{"level":3,"title":"深度优先搜索（DFS）","slug":"深度优先搜索-dfs","link":"#深度优先搜索-dfs","children":[]},{"level":3,"title":"广度优先搜索（BFS）","slug":"广度优先搜索-bfs","link":"#广度优先搜索-bfs","children":[]},{"level":3,"title":"马踏棋盘算法（骑士周游问题）","slug":"马踏棋盘算法-骑士周游问题","link":"#马踏棋盘算法-骑士周游问题","children":[]},{"level":3,"title":"深度优先生成树和广度优先生成树","slug":"深度优先生成树和广度优先生成树","link":"#深度优先生成树和广度优先生成树","children":[{"level":4,"title":"深度优先生成森林","slug":"深度优先生成森林","link":"#深度优先生成森林","children":[]},{"level":4,"title":"广度优先生成森林","slug":"广度优先生成森林","link":"#广度优先生成森林","children":[]}]},{"level":3,"title":"普里姆（Prim）算法求最小生成树","slug":"普里姆-prim-算法求最小生成树","link":"#普里姆-prim-算法求最小生成树","children":[{"level":4,"title":"普里姆算法","slug":"普里姆算法","link":"#普里姆算法","children":[]}]}]},{"level":2,"title":"散列表(Hash)（哈希表）","slug":"散列表-hash-哈希表","link":"#散列表-hash-哈希表","children":[{"level":3,"title":"哈希表的构建","slug":"哈希表的构建","link":"#哈希表的构建","children":[]},{"level":3,"title":"哈希函数的构造","slug":"哈希函数的构造","link":"#哈希函数的构造","children":[{"level":4,"title":"直接定址法","slug":"直接定址法","link":"#直接定址法","children":[]},{"level":4,"title":"数字分析法","slug":"数字分析法","link":"#数字分析法","children":[]},{"level":4,"title":"平方取中法","slug":"平方取中法","link":"#平方取中法","children":[]},{"level":4,"title":"折叠法","slug":"折叠法","link":"#折叠法","children":[]},{"level":4,"title":"除留余数法","slug":"除留余数法","link":"#除留余数法","children":[]},{"level":4,"title":"随机数法","slug":"随机数法","link":"#随机数法","children":[]}]},{"level":3,"title":"处理冲突的方法","slug":"处理冲突的方法","link":"#处理冲突的方法","children":[{"level":4,"title":"开放定址法","slug":"开放定址法","link":"#开放定址法","children":[]},{"level":4,"title":"再哈希法","slug":"再哈希法","link":"#再哈希法","children":[]},{"level":4,"title":"链地址法","slug":"链地址法","link":"#链地址法","children":[]},{"level":4,"title":"建立一个公共溢出区","slug":"建立一个公共溢出区","link":"#建立一个公共溢出区","children":[]}]},{"level":3,"title":"哈希查找算法及C语言实现","slug":"哈希查找算法及c语言实现","link":"#哈希查找算法及c语言实现","children":[{"level":4,"title":"查找算法的效率分析","slug":"查找算法的效率分析","link":"#查找算法的效率分析","children":[]}]}]},{"level":2,"title":"算法","slug":"算法","link":"#算法","children":[{"level":3,"title":"1、动态规划（Dynamic Programming，DP）","slug":"_1、动态规划-dynamic-programming-dp","link":"#_1、动态规划-dynamic-programming-dp","children":[]},{"level":3,"title":"2、贪心思想","slug":"_2、贪心思想","link":"#_2、贪心思想","children":[]}]}],"git":{"updatedTime":1696090710000,"contributors":[{"name":"“Mortal-Tianya”","email":"Tianya-68@qq.com","commits":1}]},"filePathRelative":"note/数据结构与算法C语言实现.md"}');export{l as data};
