import{_ as a,o as e,c as s,a as h}from"./app-521e935c.js";const n={},c=h('<h2 id="计算机底层原理及电路实现" tabindex="-1"><a class="header-anchor" href="#计算机底层原理及电路实现" aria-hidden="true">#</a> 计算机底层原理及电路实现</h2><h3 id="进制转换" tabindex="-1"><a class="header-anchor" href="#进制转换" aria-hidden="true">#</a> 进制转换</h3><img src="https://cxrs.oss-cn-shenzhen.aliyuncs.com/202207271616604.png" alt="image-20220727161643870" style="zoom:50%;"><h3 id="真值表" tabindex="-1"><a class="header-anchor" href="#真值表" aria-hidden="true">#</a> 真值表</h3><img src="https://cxrs.oss-cn-shenzhen.aliyuncs.com/202207271617253.png" alt="image-20220727161721209" style="zoom:50%;"><h3 id="逻辑门电路" tabindex="-1"><a class="header-anchor" href="#逻辑门电路" aria-hidden="true">#</a> 逻辑门电路</h3><img src="https://cxrs.oss-cn-shenzhen.aliyuncs.com/202207271617968.png" alt="image-20220727161741928" style="zoom:50%;"><img src="https://cxrs.oss-cn-shenzhen.aliyuncs.com/202207271618006.png" alt="image-20220727161832963" style="zoom:50%;"><h3 id="半加器-half-adder" tabindex="-1"><a class="header-anchor" href="#半加器-half-adder" aria-hidden="true">#</a> 半加器（Half Adder）</h3><img src="https://cxrs.oss-cn-shenzhen.aliyuncs.com/202207271618026.png" alt="image-20220727161846993" style="zoom:50%;"><h3 id="半加器和全加器-full-adder" tabindex="-1"><a class="header-anchor" href="#半加器和全加器-full-adder" aria-hidden="true">#</a> 半加器和全加器（Full Adder）</h3><img src="https://cxrs.oss-cn-shenzhen.aliyuncs.com/202207271619136.png" alt="image-20220727161915100" style="zoom:50%;"><h3 id="八位计算单元" tabindex="-1"><a class="header-anchor" href="#八位计算单元" aria-hidden="true">#</a> 八位计算单元</h3><img src="https://cxrs.oss-cn-shenzhen.aliyuncs.com/202207271619750.png" alt="image-20220727161931709" style="zoom:50%;"><h3 id="原码、反码、补码" tabindex="-1"><a class="header-anchor" href="#原码、反码、补码" aria-hidden="true">#</a> 原码、反码、补码</h3><img src="https://cxrs.oss-cn-shenzhen.aliyuncs.com/202207271619845.png" alt="image-20220727161939808" style="zoom:50%;"><h3 id="alu-arithmetic-logic-unit-算术逻辑单元" tabindex="-1"><a class="header-anchor" href="#alu-arithmetic-logic-unit-算术逻辑单元" aria-hidden="true">#</a> ALU（Arithmetic Logic Unit）算术逻辑单元</h3><img src="https://cxrs.oss-cn-shenzhen.aliyuncs.com/202207271619450.png" alt="image-20220727161959405" style="zoom:50%;"><h3 id="存储单元" tabindex="-1"><a class="header-anchor" href="#存储单元" aria-hidden="true">#</a> 存储单元</h3><img src="https://cxrs.oss-cn-shenzhen.aliyuncs.com/202207271620852.png" alt="image-20220727162012801" style="zoom:50%;"><img src="https://cxrs.oss-cn-shenzhen.aliyuncs.com/202207271620218.png" alt="image-20220727162021176" style="zoom:50%;"><h3 id="地址选择器" tabindex="-1"><a class="header-anchor" href="#地址选择器" aria-hidden="true">#</a> 地址选择器</h3><img src="https://cxrs.oss-cn-shenzhen.aliyuncs.com/202207271620690.png" alt="image-20220727162030650" style="zoom:50%;"><h3 id="_8位计算机实现" tabindex="-1"><a class="header-anchor" href="#_8位计算机实现" aria-hidden="true">#</a> 8位计算机实现</h3><img src="https://cxrs.oss-cn-shenzhen.aliyuncs.com/202207271620966.png" alt="image-20220727162039921" style="zoom:50%;"><h3 id="机器语言和汇编语言" tabindex="-1"><a class="header-anchor" href="#机器语言和汇编语言" aria-hidden="true">#</a> 机器语言和汇编语言</h3><img src="https://cxrs.oss-cn-shenzhen.aliyuncs.com/202207271621002.png" alt="image-20220727162131956" style="zoom:50%;"><h3 id="缓存" tabindex="-1"><a class="header-anchor" href="#缓存" aria-hidden="true">#</a> 缓存</h3><img src="https://cxrs.oss-cn-shenzhen.aliyuncs.com/202207271621620.png" alt="image-20220727162147576" style="zoom:50%;"><h2 id="准备工作" tabindex="-1"><a class="header-anchor" href="#准备工作" aria-hidden="true">#</a> 准备工作</h2><img src="https://cxrs.oss-cn-shenzhen.aliyuncs.com/202207272257617.png" alt="image-20220727225746561" style="zoom:80%;"><h4 id="_1、指令是如何运行的" tabindex="-1"><a class="header-anchor" href="#_1、指令是如何运行的" aria-hidden="true">#</a> 1、指令是如何运行的</h4>',32),r=[c];function i(t,d){return e(),s("div",null,r)}const l=a(n,[["render",i],["__file"," 计算机底层原理及电路实现.html.vue"]]);export{l as default};
